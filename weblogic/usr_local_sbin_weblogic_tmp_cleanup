#!/bin/sh
#
# name:		    weblogic_tmp_cleanup
# description:	cleans up /tmp after weblogic / jrockit
# copyright:	(C) 2016 Sebastian Schauenburg
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#
# generic
#

DIRECTORY_TARGET="/tmp"
FILES_TO_KEEP_AMOUNT=20
DAEMON_USER="weblogic"
DAEMON_GROUP="weblogic"
CURRENT_DATETIME=$( date +%s )



#
# functions
#

check_directory_and_cleanup(){
	FILE_AMOUNT=$( ls -atr ${DIRECTORY_TARGET} | egrep -v '^(\.|\.\.)$' | egrep "${1}" | wc -l )
	FILES_TO_REMOVE_AMOUNT=$(( ${FILE_AMOUNT} - ${FILES_TO_KEEP_AMOUNT} ))

	if [ ${FILES_TO_REMOVE_AMOUNT} -gt 0 ]
	then
		for i in $( ls -atr ${DIRECTORY_TARGET} | egrep -v '^(\.|\.\.)$' | egrep "${1}" | head -n ${FILES_TO_REMOVE_AMOUNT} | xargs )
		do
			DAEMON_USER_GROUP=$( ls -dl ${DIRECTORY_TARGET}/${i} | awk '{ print $3 "," $4 }' )

			if [ "${DAEMON_USER_GROUP}" == "${DAEMON_USER},${DAEMON_GROUP}" ]
			then
				DIRECTORY_DATETIME=$( ls -dl --time-style=+%s ${DIRECTORY_TARGET}/${i} | awk '{ print $6 }' )

				if [ "$2" = "" ]
				then
					logger "weblogic_tmp_cleanup: removed ${DIRECTORY_TARGET}/${i}"
					rm -r ${DIRECTORY_TARGET}/${i}
				else
					if [ ${DIRECTORY_DATETIME} -lt ${2} ]
					then
						logger "weblogic_tmp_cleanup: removed ${DIRECTORY_TARGET}/${i}"
						rm -r ${DIRECTORY_TARGET}/${i}
					fi
				fi
			fi
		done
	fi
}



main(){
	OLDEST_PROCESS_STARTED_DATETIME=""
	PIDS=$( pgrep -u weblogic -f '.*java.*weblogic.*' | xargs )
	if [ "${PIDS}" != "" ]
	then
		EGREP=$( echo "${PIDS}" | sed -re 's/ /|/g' )
		OLDEST_PROCESS_STARTED=$( ps -eo pid,etime | awk '{ print $1 "," $2 }' | egrep "^(${EGREP}){1}," | cut -d, -f 2 | grep '-' | sort | tail -n 1 )

		DAYS=$( echo ${OLDEST_PROCESS_STARTED} | cut -d\- -f 1 )
		HOURS=$( echo ${OLDEST_PROCESS_STARTED} | cut -d\- -f 2 | cut -d: -f 1 )
		MINUTES=$( echo ${OLDEST_PROCESS_STARTED} | cut -d\- -f 2 | cut -d: -f 2 )
		SECONDS=$( echo ${OLDEST_PROCESS_STARTED} | cut -d\- -f 2 | cut -d: -f 3 )

		OLDEST_PROCESS_STARTED_UPTIME=$(( ( ${DAYS} * 24 * 60 * 60 ) + ( ${HOURS} * 60 * 60 ) + ( ${MINUTES} * 60 ) + ${SECONDS} ))
		OLDEST_PROCESS_STARTED_DATETIME=$(( ${CURRENT_DATETIME} - ${OLDEST_PROCESS_STARTED_UPTIME} ))
	fi


	
	check_directory_and_cleanup "^[0-9]{4}_[0-9]{2}_[0-9]{2}_[0-9]{2}_[0-9]{2}_[0-9]{2}_[0-9]+\$" ${OLDEST_PROCESS_STARTED_DATETIME}
	check_directory_and_cleanup "^\.java_pid[0-9]+\$" ${OLDEST_PROCESS_STARTED_DATETIME}
	check_directory_and_cleanup "^wls_upload[0-9]+\$" ${OLDEST_PROCESS_STARTED_DATETIME}
	check_directory_and_cleanup "^upload[0-9A-Za-z_]+\.tmp\$" ${OLDEST_PROCESS_STARTED_DATETIME}
	check_directory_and_cleanup "^MIME[0-9]+\.tmp\$" ${OLDEST_PROCESS_STARTED_DATETIME}
	check_directory_and_cleanup "^[0-9]+\.tmp\$" ${OLDEST_PROCESS_STARTED_DATETIME}
}



#
# main
#

main



exit 0
